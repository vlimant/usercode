process PROCESS = {
#couts redirection
service = MessageLogger { 
	untracked vstring destinations = { "detailedInfo"
#                                     		, "critical"
#                                     		, "cerr"
						, "debug" 
					}
	untracked PSet critical     = { untracked string threshold = "ERROR" 
					untracked string extension = ".txt"   }
	untracked PSet detailedInfo = { untracked string threshold = "INFO" 
					untracked string extension = ".txt"    } 
    	untracked PSet cerr  = { 	untracked string threshold = "WARNING"
					untracked string extension = ".txt"  }
				
	untracked vstring categories	= { 
						"TrackProducerFromSimTrack",
						"ErrorMatrix"
					}	
	untracked vstring debugModules   = { "*" }
	untracked PSet debug	={	untracked string threshold = "DEBUG" 
					untracked PSet INFO            = { untracked int32 limit = 0 }
                                       	untracked PSet DEBUG           = { untracked int32 limit = 0 }
					untracked PSet TrackProducerFromSimTrack = { untracked int32 limit = 10000000}
					untracked PSet ErrorMatrix = { untracked int32 limit = 10000000}
				}
	} 

#source
include "RecoTracker/TrackProducerFromSimTrack/test/source.cff"
replace PoolSource.maxEvents=1000
#replace PoolSource.maxEvents=-1
replace PoolSource.skipEvents=0

#the conversion
include "RecoTracker/TrackProducerFromSimTrack/data/TrackProducerFromSimTrack.cfi"

#a validator
#include "RecoTracker/TrackProducerFromSimTrack/test/validation.cff"


# the matrix analyzer
#module matrixAnalyzer = ErrorMatrixAnalyzer{
#	InputTag trackLabel = TrackProducerFromSimTrack
#	string rootFileName = "errorMatrixTest.root"
#}

#the track analyzer
#this guy need some more include
include "RecoTracker/TrackProducerFromSimTrack/test/minimum-config.cff"
module trackAnalyzer = TrackToSimTrackComparator{
	InputTag trackLabel = TrackProducerFromSimTrack
	string plotFileName = "fakeSTAplots.root"
}

module staTrackAnalyzer = TrackToSimTrackComparator{
	InputTag trackLabel = standAloneMuons:UpdatedAtVtx
	string plotFileName = "STAplots.root"
}

module ckfTrackAnalyzer = TrackToSimTrackComparator{
	InputTag trackLabel = ctfWithMaterialTracks
	string plotFileName = "CKFplots.root"
}



module out = PoolOutputModule 	{
		untracked string fileName = 'test-write.root'
#		untracked vstring outputCommands = { "drop *", "keep *_*_*_PROCESS" }
	}

#do something
path p1 = {
#always. can be dummy
#	doReco,
#do the conversion	
	TrackProducerFromSimTrack
#look at what come out
	,trackAnalyzer
	,staTrackAnalyzer
	,ckfTrackAnalyzer
	}

#write out something
#endpath outpath = { out }
}
