#include <vector>
#include <map>
#include <string>

#include "TTree.h"
	Int_t	RunNumber;
	Int_t	EventNumber;
	Int_t	l1SingleMuNonIsoTriggered;
	Int_t	l2SingleMuNonIsoTriggered;
	Int_t	l3SingleMuNonIsoTriggered;
	Int_t	l1SingleMuIsoTriggered;
	Int_t	l2SingleMuIsoPreTriggered;
	Int_t	l2SingleMuIsoTriggered;
	Int_t	l3SingleMuIsoPreTriggered;
	Int_t	l3SingleMuIsoTriggered;
	Int_t	l1DiMuNonIsoTriggered;
	Int_t	l2DiMuNonIsoTriggered;
	Int_t	l3DiMuNonIsoTriggered;
	Int_t	l1DiMuIsoTriggered;
	Int_t	l2DiMuIsoPreTriggered;
	Int_t	l2DiMuIsoTriggered;
	Int_t	l3DiMuIsoPreTriggered;
	Int_t	l3DiMuIsoTriggered;
	Int_t	nL1;
	Int_t	nL2;
	Int_t	nL3;
	Int_t	nL3TracksFromL2;
	Int_t	nL3Cands;
	Int_t	nL3Seeds;
/*	Int_t	l3DetIds.first;
  Int_t	l3SubdetIds.first;
  Int_t	l3Component.first;
  Int_t	l3NMuHits.first;
  Int_t	l3NMuHits.second;
  Int_t	l3MuStationNumber.first;
  Int_t	l3RecHitsStatus.first;
  Int_t	l3TrackDetIds.first;
  Int_t	l3TrackSubdetIds.first;
  Int_t	l3TrackRecHitsStatus.first;
  Int_t	l2DetIds.first;
  Int_t	l2SubdetIds.first;
  Int_t	l2Component.first;
  Int_t	l2NMuHits.first;
  Int_t	l2NMuHits.second;
  Int_t	l2MuStationNumber.first;
  Int_t	l2RecHitsStatus.first;
  Int_t	l3AssociatedSimMuonDetIds.first;
  Int_t	l3AssociatedSimMuonNMuHits.first;
  Int_t	l3AssociatedSimMuonNMuHits.second;
  Int_t	l3AssociatedSimMuonMuStationNumber.first;
  Int_t	l3TrackAssociatedSimMuonDetIds.first;
  Int_t	l2AssociatedSimMuonDetIds.first;
  Int_t	l2AssociatedSimMuonNMuHits.first;
  Int_t	l2AssociatedSimMuonNMuHits.second;
  Int_t	l2AssociatedSimMuonMuStationNumber.first;
*/
        Int_t	nSimMuon;
/*
  Int_t	simMuonDetIds.first;
  Int_t	simMuonNMuHits.first;
  Int_t	simMuonNMuHits.second;
  Int_t	simMuonMuStationNumber.first;
*/
        Double_t   totalMuonHLTTime;
	map<std::string,double>	*muonDigiModuleTimes;
	map<std::string,double>	*muonLocalRecModuleTimes;
	map<std::string,double>	*muonL2RecModuleTimes;
	map<std::string,double>	*muonL3RecModuleTimes;
	map<std::string,double>	*muonL2IsoModuleTimes;
	map<std::string,double>	*muonL3IsoModuleTimes;
	map<std::string,double>	*trackerDigiModuleTimes;
	map<std::string,double>	*trackerRecModuleTimes;
	map<std::string,double>	*caloDigiModuleTimes;
	map<std::string,double>	*caloRecModuleTimes;
	vector<int>	*triggerDecisions;
	vector<std::string>	*triggerNames;
	vector<double>	*l3P;
	vector<double>	*l3Px;
	vector<double>	*l3Py;
	vector<double>	*l3Pz;
	vector<double>	*l3Pt;
	vector<double>	*l3PtError;
	vector<double>	*l3Pt90;
	vector<double>	*l3Eta;
	vector<double>	*l3EtaError;
	vector<double>	*l3Phi;
	vector<double>	*l3PhiError;
	vector<double>	*l3D0;
	vector<double>	*l3D0Error;
	vector<int>	*l3NHits;
	vector<double>	*l3Charge;
	vector<double>	*l3Chi2;
	vector<double>	*l3Ndof;
	vector<double>	*l3CalIsoDeposit;
	vector<double>	*l3TrackIsoDeposit;
	vector<double>	*l3IsoTrackDR;
	vector<double>	*l3IsoTrackDRMinDelPt;
	vector<double>	*l3Dsz;
	vector<double>	*l3DszError;
	vector<double>	*l3Dxy;
	vector<double>	*l3DxyError;
	vector<double>	*l3Lambda;
	vector<double>	*l3LambdaError;
	vector<double>	*l3Qoverp;
	vector<double>	*l3QoverpError;
	vector<ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > >	*l3ErrorMatrix;
	map<int,vector<int> >	*l3DetIds;
	map<int,vector<int> >	*l3SubdetIds;
	map<int,vector<int> >	*l3Component;
	map<int,int>	*l3NMuHits;
	map<int,vector<int> >	*l3MuStationNumber;
	map<int,vector<int> >	*l3RecHitsStatus;
	map<int,vector<double> >	*l3RecHitsX;
	map<int,vector<double> >	*l3RecHitsY;
	map<int,vector<double> >	*l3RecHitsZ;
	vector<int>	*indexL2SeedingL3;
	vector<int>	*indexL3SeededFromL2;
	vector<int>	*l2SeedsL3;
	map<int,vector<double> >	*muonErrorMatrix;
	vector<double>	*l3TrackP;
	vector<double>	*l3TrackPx;
	vector<double>	*l3TrackPy;
	vector<double>	*l3TrackPz;
	vector<double>	*l3TrackPt;
	vector<double>	*l3TrackPtError;
	vector<double>	*l3TrackEta;
	vector<double>	*l3TrackEtaError;
	vector<double>	*l3TrackPhi;
	vector<double>	*l3TrackPhiError;
	vector<double>	*l3TrackD0;
	vector<double>	*l3TrackD0Error;
	vector<int>	*l3TrackNHits;
	vector<double>	*l3TrackCharge;
	vector<double>	*l3TrackChi2;
	vector<double>	*l3TrackNdof;
	vector<double>	*l3TrackDsz;
	vector<double>	*l3TrackDszError;
	vector<double>	*l3TrackDxy;
	vector<double>	*l3TrackDxyError;
	vector<double>	*l3TrackLambda;
	vector<double>	*l3TrackLambdaError;
	vector<double>	*l3TrackQoverp;
	vector<double>	*l3TrackQoverpError;
	vector<ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > >	*l3TrackErrorMatrix;
	map<int,vector<int> >	*l3TrackDetIds;
	map<int,vector<int> >	*l3TrackSubdetIds;
	map<int,vector<int> >	*l3TrackRecHitsStatus;
	map<int,vector<double> >	*l3TrackRecHitsX;
	map<int,vector<double> >	*l3TrackRecHitsY;
	map<int,vector<double> >	*l3TrackRecHitsZ;
	vector<double>	*l2P;
	vector<double>	*l2Px;
	vector<double>	*l2Py;
	vector<double>	*l2Pz;
	vector<double>	*l2Pt;
	vector<double>	*l2PtError;
	vector<double>	*l2Pt90;
	vector<double>	*l2Eta;
	vector<double>	*l2EtaError;
	vector<double>	*l2Phi;
	vector<double>	*l2PhiError;
	vector<double>	*l2D0;
	vector<double>	*l2D0Error;
	vector<int>	*l2NHits;
	vector<double>	*l2Charge;
	vector<double>	*l2Chi2;
	vector<double>	*l2Ndof;
	vector<int>	*l2NSeeds;
	map<int,vector<int> >	*l2DetIds;
	map<int,vector<int> >	*l2SubdetIds;
	map<int,vector<int> >	*l2Component;
	map<int,int>	*l2NMuHits;
	map<int,vector<int> >	*l2MuStationNumber;
	map<int,vector<int> >	*l2RecHitsStatus;
	map<int,vector<double> >	*l2RecHitsX;
	map<int,vector<double> >	*l2RecHitsY;
	map<int,vector<double> >	*l2RecHitsZ;
	vector<double>	*l2CalIsoDeposit;
	vector<double>	*l2Dsz;
	vector<double>	*l2DszError;
	vector<double>	*l2Dxy;
	vector<double>	*l2DxyError;
	vector<double>	*l2Lambda;
	vector<double>	*l2LambdaError;
	vector<double>	*l2Qoverp;
	vector<double>	*l2QoverpError;
	vector<ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > >	*l2ErrorMatrix;
	vector<int>	*l1SeedsL2;
	vector<int>	*indexL1SeedingL2;
	vector<int>	*indexL2SeededFromL1;
	vector<double>	*l1P;
	vector<double>	*l1Pt;
	vector<double>	*l1Eta;
	vector<double>	*l1Phi;
	vector<int>	*l1Quality;
	vector<int>	*l1IsIso;
	vector<int>	*l1IsMip;
	vector<int>	*l1IsForward;
	vector<int>	*l1IsRPC;
	vector<int>	*l3IsAssociated;
	vector<int>	*l3ParentID;
	vector<int>	*l3MotherBinNumber;
	vector<double>	*l3AssociationVar;
	vector<double>	*l3AssociatedSimMuonPt;
	vector<double>	*l3AssociatedSimMuonEta;
	vector<double>	*l3AssociatedSimMuonPhi;
	vector<int>	*l3AssociatedSimMuonNHits;
	map<int,vector<int> >	*l3AssociatedSimMuonDetIds;
	map<int,int>	*l3AssociatedSimMuonNMuHits;
	map<int,vector<int> >	*l3AssociatedSimMuonMuStationNumber;
	vector<double>	*l3AssociatedSimMuonDsz;
	vector<double>	*l3AssociatedSimMuonDxy;
	vector<double>	*l3AssociatedSimMuonLambda;
	vector<double>	*l3AssociatedSimMuonQoverP;
	vector<int>	*l3TrackIsAssociated;
	vector<int>	*l3TrackParentID;
	vector<int>	*l3TrackMotherBinNumber;
	vector<double>	*l3TrackAssociationVar;
	vector<double>	*l3TrackAssociatedSimMuonPt;
	vector<double>	*l3TrackAssociatedSimMuonEta;
	vector<double>	*l3TrackAssociatedSimMuonPhi;
	vector<int>	*l3TrackAssociatedSimMuonNHits;
	map<int,vector<int> >	*l3TrackAssociatedSimMuonDetIds;
	vector<double>	*l3TrackAssociatedSimMuonDsz;
	vector<double>	*l3TrackAssociatedSimMuonDxy;
	vector<double>	*l3TrackAssociatedSimMuonLambda;
	vector<double>	*l3TrackAssociatedSimMuonQoverP;
	vector<int>	*l2IsAssociated;
	vector<int>	*l2ParentID;
	vector<int>	*l2MotherBinNumber;
	vector<double>	*l2AssociationVar;
	vector<double>	*l2AssociatedSimMuonPt;
	vector<double>	*l2AssociatedSimMuonEta;
	vector<double>	*l2AssociatedSimMuonPhi;
	vector<int>	*l2AssociatedSimMuonNHits;
	map<int,vector<int> >	*l2AssociatedSimMuonDetIds;
	map<int,int>	*l2AssociatedSimMuonNMuHits;
	map<int,vector<int> >	*l2AssociatedSimMuonMuStationNumber;
	vector<double>	*l2AssociatedSimMuonDsz;
	vector<double>	*l2AssociatedSimMuonDxy;
	vector<double>	*l2AssociatedSimMuonLambda;
	vector<double>	*l2AssociatedSimMuonQoverP;
	vector<int>	*simMuonParentID;
	vector<int>	*simMuonMotherBinNumber;
	vector<double>	*simMuonPt;
	vector<double>	*simMuonEta;
	vector<double>	*simMuonPhi;
	vector<int>	*simMuonNHits;
	map<int,vector<int> >	*simMuonDetIds;
	map<int,int>	*simMuonNMuHits;
	map<int,vector<int> >	*simMuonMuStationNumber;
	vector<double>	*simMuonDsz;
	vector<double>	*simMuonDxy;
	vector<double>	*simMuonLambda;
	vector<double>	*simMuonQoverP;
	vector<int>	*simToL3Associated;
	vector<double>	*simToL3AssociationVar;
	vector<int>	*simToL3RecoIndex;
	vector<int>	*simToTkAssociated;
	vector<double>	*simToTkAssociationVar;
	vector<int>	*simToTkRecoIndex;
	vector<int>	*simToL2Associated;
	vector<double>	*simToL2AssociationVar;
	vector<int>	*simToL2RecoIndex;
void Init(TTree *tree) {
	tree->SetBranchAddress("RunNumber", &RunNumber);
	tree->SetBranchAddress("EventNumber", &EventNumber);
	tree->SetBranchAddress("l1SingleMuNonIsoTriggered", &l1SingleMuNonIsoTriggered);
	tree->SetBranchAddress("l2SingleMuNonIsoTriggered", &l2SingleMuNonIsoTriggered);
	tree->SetBranchAddress("l3SingleMuNonIsoTriggered", &l3SingleMuNonIsoTriggered);
	tree->SetBranchAddress("l1SingleMuIsoTriggered", &l1SingleMuIsoTriggered);
	tree->SetBranchAddress("l2SingleMuIsoPreTriggered", &l2SingleMuIsoPreTriggered);
	tree->SetBranchAddress("l2SingleMuIsoTriggered", &l2SingleMuIsoTriggered);
	tree->SetBranchAddress("l3SingleMuIsoPreTriggered", &l3SingleMuIsoPreTriggered);
	tree->SetBranchAddress("l3SingleMuIsoTriggered", &l3SingleMuIsoTriggered);
	tree->SetBranchAddress("l1DiMuNonIsoTriggered", &l1DiMuNonIsoTriggered);
	tree->SetBranchAddress("l2DiMuNonIsoTriggered", &l2DiMuNonIsoTriggered);
	tree->SetBranchAddress("l3DiMuNonIsoTriggered", &l3DiMuNonIsoTriggered);
	tree->SetBranchAddress("l1DiMuIsoTriggered", &l1DiMuIsoTriggered);
	tree->SetBranchAddress("l2DiMuIsoPreTriggered", &l2DiMuIsoPreTriggered);
	tree->SetBranchAddress("l2DiMuIsoTriggered", &l2DiMuIsoTriggered);
	tree->SetBranchAddress("l3DiMuIsoPreTriggered", &l3DiMuIsoPreTriggered);
	tree->SetBranchAddress("l3DiMuIsoTriggered", &l3DiMuIsoTriggered);
	tree->SetBranchAddress("nL1", &nL1);
	tree->SetBranchAddress("nL2", &nL2);
	tree->SetBranchAddress("nL3", &nL3);
	tree->SetBranchAddress("nL3TracksFromL2", &nL3TracksFromL2);
	tree->SetBranchAddress("nL3Cands", &nL3Cands);
	tree->SetBranchAddress("nL3Seeds", &nL3Seeds);
	/*	tree->SetBranchAddress("l3DetIds.first", &l3DetIds.first);
	  tree->SetBranchAddress("l3SubdetIds.first", &l3SubdetIds.first);
	  tree->SetBranchAddress("l3Component.first", &l3Component.first);
	  tree->SetBranchAddress("l3NMuHits.first", &l3NMuHits.first);
	  tree->SetBranchAddress("l3NMuHits.second", &l3NMuHits.second);
	  tree->SetBranchAddress("l3MuStationNumber.first", &l3MuStationNumber.first);
	  tree->SetBranchAddress("l3RecHitsStatus.first", &l3RecHitsStatus.first);
	  tree->SetBranchAddress("l3TrackDetIds.first", &l3TrackDetIds.first);
	  tree->SetBranchAddress("l3TrackSubdetIds.first", &l3TrackSubdetIds.first);
	  tree->SetBranchAddress("l3TrackRecHitsStatus.first", &l3TrackRecHitsStatus.first);
	  tree->SetBranchAddress("l2DetIds.first", &l2DetIds.first);
	  tree->SetBranchAddress("l2SubdetIds.first", &l2SubdetIds.first);
	  tree->SetBranchAddress("l2Component.first", &l2Component.first);
	  tree->SetBranchAddress("l2NMuHits.first", &l2NMuHits.first);
	  tree->SetBranchAddress("l2NMuHits.second", &l2NMuHits.second);
	  tree->SetBranchAddress("l2MuStationNumber.first", &l2MuStationNumber.first);
	  tree->SetBranchAddress("l2RecHitsStatus.first", &l2RecHitsStatus.first);
	  tree->SetBranchAddress("l3AssociatedSimMuonDetIds.first", &l3AssociatedSimMuonDetIds.first);
	  tree->SetBranchAddress("l3AssociatedSimMuonNMuHits.first", &l3AssociatedSimMuonNMuHits.first);
	  tree->SetBranchAddress("l3AssociatedSimMuonNMuHits.second", &l3AssociatedSimMuonNMuHits.second);
	  tree->SetBranchAddress("l3AssociatedSimMuonMuStationNumber.first", &l3AssociatedSimMuonMuStationNumber.first);
	  tree->SetBranchAddress("l3TrackAssociatedSimMuonDetIds.first", &l3TrackAssociatedSimMuonDetIds.first);
	  tree->SetBranchAddress("l2AssociatedSimMuonDetIds.first", &l2AssociatedSimMuonDetIds.first);
	  tree->SetBranchAddress("l2AssociatedSimMuonNMuHits.first", &l2AssociatedSimMuonNMuHits.first);
	  tree->SetBranchAddress("l2AssociatedSimMuonNMuHits.second", &l2AssociatedSimMuonNMuHits.second);
	  tree->SetBranchAddress("l2AssociatedSimMuonMuStationNumber.first", &l2AssociatedSimMuonMuStationNumber.first);
	*/
	tree->SetBranchAddress("nSimMuon", &nSimMuon);
	/*	tree->SetBranchAddress("simMuonDetIds.first", &simMuonDetIds.first);
		tree->SetBranchAddress("simMuonNMuHits.first", &simMuonNMuHits.first);
		tree->SetBranchAddress("simMuonNMuHits.second", &simMuonNMuHits.second);
		tree->SetBranchAddress("simMuonMuStationNumber.first", &simMuonMuStationNumber.first);
	*/
	tree->SetBranchAddress("totalMuonHLTTime",&totalMuonHLTTime);
	tree->SetBranchAddress("muonDigiModuleTimes", &muonDigiModuleTimes);
	tree->SetBranchAddress("muonLocalRecModuleTimes", &muonLocalRecModuleTimes);
	tree->SetBranchAddress("muonL2RecModuleTimes", &muonL2RecModuleTimes);
	tree->SetBranchAddress("muonL3RecModuleTimes", &muonL3RecModuleTimes);
	tree->SetBranchAddress("muonL2IsoModuleTimes", &muonL2IsoModuleTimes);
	tree->SetBranchAddress("muonL3IsoModuleTimes", &muonL3IsoModuleTimes);
	tree->SetBranchAddress("trackerDigiModuleTimes", &trackerDigiModuleTimes);
	tree->SetBranchAddress("trackerRecModuleTimes", &trackerRecModuleTimes);
	tree->SetBranchAddress("caloDigiModuleTimes", &caloDigiModuleTimes);
	tree->SetBranchAddress("caloRecModuleTimes", &caloRecModuleTimes);
	tree->SetBranchAddress("triggerDecisions", &triggerDecisions);
	tree->SetBranchAddress("triggerNames", &triggerNames);
	tree->SetBranchAddress("l3P", &l3P);
	tree->SetBranchAddress("l3Px", &l3Px);
	tree->SetBranchAddress("l3Py", &l3Py);
	tree->SetBranchAddress("l3Pz", &l3Pz);
	tree->SetBranchAddress("l3Pt", &l3Pt);
	tree->SetBranchAddress("l3PtError", &l3PtError);
	tree->SetBranchAddress("l3Pt90", &l3Pt90);
	tree->SetBranchAddress("l3Eta", &l3Eta);
	tree->SetBranchAddress("l3EtaError", &l3EtaError);
	tree->SetBranchAddress("l3Phi", &l3Phi);
	tree->SetBranchAddress("l3PhiError", &l3PhiError);
	tree->SetBranchAddress("l3D0", &l3D0);
	tree->SetBranchAddress("l3D0Error", &l3D0Error);
	tree->SetBranchAddress("l3NHits", &l3NHits);
	tree->SetBranchAddress("l3Charge", &l3Charge);
	tree->SetBranchAddress("l3Chi2", &l3Chi2);
	tree->SetBranchAddress("l3Ndof", &l3Ndof);
	tree->SetBranchAddress("l3CalIsoDeposit", &l3CalIsoDeposit);
	tree->SetBranchAddress("l3TrackIsoDeposit", &l3TrackIsoDeposit);
	tree->SetBranchAddress("l3IsoTrackDR", &l3IsoTrackDR);
	tree->SetBranchAddress("l3IsoTrackDRMinDelPt", &l3IsoTrackDRMinDelPt);
	tree->SetBranchAddress("l3Dsz", &l3Dsz);
	tree->SetBranchAddress("l3DszError", &l3DszError);
	tree->SetBranchAddress("l3Dxy", &l3Dxy);
	tree->SetBranchAddress("l3DxyError", &l3DxyError);
	tree->SetBranchAddress("l3Lambda", &l3Lambda);
	tree->SetBranchAddress("l3LambdaError", &l3LambdaError);
	tree->SetBranchAddress("l3Qoverp", &l3Qoverp);
	tree->SetBranchAddress("l3QoverpError", &l3QoverpError);
	tree->SetBranchAddress("l3ErrorMatrix", &l3ErrorMatrix);
	tree->SetBranchAddress("l3DetIds", &l3DetIds);
	tree->SetBranchAddress("l3SubdetIds", &l3SubdetIds);
	tree->SetBranchAddress("l3Component", &l3Component);
	tree->SetBranchAddress("l3NMuHits", &l3NMuHits);
	tree->SetBranchAddress("l3MuStationNumber", &l3MuStationNumber);
	tree->SetBranchAddress("l3RecHitsStatus", &l3RecHitsStatus);
	tree->SetBranchAddress("l3RecHitsX", &l3RecHitsX);
	tree->SetBranchAddress("l3RecHitsY", &l3RecHitsY);
	tree->SetBranchAddress("l3RecHitsZ", &l3RecHitsZ);
	tree->SetBranchAddress("indexL2SeedingL3", &indexL2SeedingL3);
	tree->SetBranchAddress("indexL3SeededFromL2", &indexL3SeededFromL2);
	tree->SetBranchAddress("l2SeedsL3", &l2SeedsL3);
	tree->SetBranchAddress("muonErrorMatrix", &muonErrorMatrix);
	tree->SetBranchAddress("l3TrackP", &l3TrackP);
	tree->SetBranchAddress("l3TrackPx", &l3TrackPx);
	tree->SetBranchAddress("l3TrackPy", &l3TrackPy);
	tree->SetBranchAddress("l3TrackPz", &l3TrackPz);
	tree->SetBranchAddress("l3TrackPt", &l3TrackPt);
	tree->SetBranchAddress("l3TrackPtError", &l3TrackPtError);
	tree->SetBranchAddress("l3TrackEta", &l3TrackEta);
	tree->SetBranchAddress("l3TrackEtaError", &l3TrackEtaError);
	tree->SetBranchAddress("l3TrackPhi", &l3TrackPhi);
	tree->SetBranchAddress("l3TrackPhiError", &l3TrackPhiError);
	tree->SetBranchAddress("l3TrackD0", &l3TrackD0);
	tree->SetBranchAddress("l3TrackD0Error", &l3TrackD0Error);
	tree->SetBranchAddress("l3TrackNHits", &l3TrackNHits);
	tree->SetBranchAddress("l3TrackCharge", &l3TrackCharge);
	tree->SetBranchAddress("l3TrackChi2", &l3TrackChi2);
	tree->SetBranchAddress("l3TrackNdof", &l3TrackNdof);
	tree->SetBranchAddress("l3TrackDsz", &l3TrackDsz);
	tree->SetBranchAddress("l3TrackDszError", &l3TrackDszError);
	tree->SetBranchAddress("l3TrackDxy", &l3TrackDxy);
	tree->SetBranchAddress("l3TrackDxyError", &l3TrackDxyError);
	tree->SetBranchAddress("l3TrackLambda", &l3TrackLambda);
	tree->SetBranchAddress("l3TrackLambdaError", &l3TrackLambdaError);
	tree->SetBranchAddress("l3TrackQoverp", &l3TrackQoverp);
	tree->SetBranchAddress("l3TrackQoverpError", &l3TrackQoverpError);
	tree->SetBranchAddress("l3TrackErrorMatrix", &l3TrackErrorMatrix);
	tree->SetBranchAddress("l3TrackDetIds", &l3TrackDetIds);
	tree->SetBranchAddress("l3TrackSubdetIds", &l3TrackSubdetIds);
	tree->SetBranchAddress("l3TrackRecHitsStatus", &l3TrackRecHitsStatus);
	tree->SetBranchAddress("l3TrackRecHitsX", &l3TrackRecHitsX);
	tree->SetBranchAddress("l3TrackRecHitsY", &l3TrackRecHitsY);
	tree->SetBranchAddress("l3TrackRecHitsZ", &l3TrackRecHitsZ);
	tree->SetBranchAddress("l2P", &l2P);
	tree->SetBranchAddress("l2Px", &l2Px);
	tree->SetBranchAddress("l2Py", &l2Py);
	tree->SetBranchAddress("l2Pz", &l2Pz);
	tree->SetBranchAddress("l2Pt", &l2Pt);
	tree->SetBranchAddress("l2PtError", &l2PtError);
	tree->SetBranchAddress("l2Pt90", &l2Pt90);
	tree->SetBranchAddress("l2Eta", &l2Eta);
	tree->SetBranchAddress("l2EtaError", &l2EtaError);
	tree->SetBranchAddress("l2Phi", &l2Phi);
	tree->SetBranchAddress("l2PhiError", &l2PhiError);
	tree->SetBranchAddress("l2D0", &l2D0);
	tree->SetBranchAddress("l2D0Error", &l2D0Error);
	tree->SetBranchAddress("l2NHits", &l2NHits);
	tree->SetBranchAddress("l2Charge", &l2Charge);
	tree->SetBranchAddress("l2Chi2", &l2Chi2);
	tree->SetBranchAddress("l2Ndof", &l2Ndof);
	tree->SetBranchAddress("l2NSeeds", &l2NSeeds);
	tree->SetBranchAddress("l2DetIds", &l2DetIds);
	tree->SetBranchAddress("l2SubdetIds", &l2SubdetIds);
	tree->SetBranchAddress("l2Component", &l2Component);
	tree->SetBranchAddress("l2NMuHits", &l2NMuHits);
	tree->SetBranchAddress("l2MuStationNumber", &l2MuStationNumber);
	tree->SetBranchAddress("l2RecHitsStatus", &l2RecHitsStatus);
	tree->SetBranchAddress("l2RecHitsX", &l2RecHitsX);
	tree->SetBranchAddress("l2RecHitsY", &l2RecHitsY);
	tree->SetBranchAddress("l2RecHitsZ", &l2RecHitsZ);
	tree->SetBranchAddress("l2CalIsoDeposit", &l2CalIsoDeposit);
	tree->SetBranchAddress("l2Dsz", &l2Dsz);
	tree->SetBranchAddress("l2DszError", &l2DszError);
	tree->SetBranchAddress("l2Dxy", &l2Dxy);
	tree->SetBranchAddress("l2DxyError", &l2DxyError);
	tree->SetBranchAddress("l2Lambda", &l2Lambda);
	tree->SetBranchAddress("l2LambdaError", &l2LambdaError);
	tree->SetBranchAddress("l2Qoverp", &l2Qoverp);
	tree->SetBranchAddress("l2QoverpError", &l2QoverpError);
	tree->SetBranchAddress("l2ErrorMatrix", &l2ErrorMatrix);
	tree->SetBranchAddress("l1SeedsL2", &l1SeedsL2);
	tree->SetBranchAddress("indexL1SeedingL2", &indexL1SeedingL2);
	tree->SetBranchAddress("indexL2SeededFromL1", &indexL2SeededFromL1);
	tree->SetBranchAddress("l1P", &l1P);
	tree->SetBranchAddress("l1Pt", &l1Pt);
	tree->SetBranchAddress("l1Eta", &l1Eta);
	tree->SetBranchAddress("l1Phi", &l1Phi);
	tree->SetBranchAddress("l1Quality", &l1Quality);
	tree->SetBranchAddress("l1IsIso", &l1IsIso);
	tree->SetBranchAddress("l1IsMip", &l1IsMip);
	tree->SetBranchAddress("l1IsForward", &l1IsForward);
	tree->SetBranchAddress("l1IsRPC", &l1IsRPC);
	tree->SetBranchAddress("l3IsAssociated", &l3IsAssociated);
	tree->SetBranchAddress("l3ParentID", &l3ParentID);
	tree->SetBranchAddress("l3MotherBinNumber", &l3MotherBinNumber);
	tree->SetBranchAddress("l3AssociationVar", &l3AssociationVar);
	tree->SetBranchAddress("l3AssociatedSimMuonPt", &l3AssociatedSimMuonPt);
	tree->SetBranchAddress("l3AssociatedSimMuonEta", &l3AssociatedSimMuonEta);
	tree->SetBranchAddress("l3AssociatedSimMuonPhi", &l3AssociatedSimMuonPhi);
	tree->SetBranchAddress("l3AssociatedSimMuonNHits", &l3AssociatedSimMuonNHits);
	tree->SetBranchAddress("l3AssociatedSimMuonDetIds", &l3AssociatedSimMuonDetIds);
	tree->SetBranchAddress("l3AssociatedSimMuonNMuHits", &l3AssociatedSimMuonNMuHits);
	tree->SetBranchAddress("l3AssociatedSimMuonMuStationNumber", &l3AssociatedSimMuonMuStationNumber);
	tree->SetBranchAddress("l3AssociatedSimMuonDsz", &l3AssociatedSimMuonDsz);
	tree->SetBranchAddress("l3AssociatedSimMuonDxy", &l3AssociatedSimMuonDxy);
	tree->SetBranchAddress("l3AssociatedSimMuonLambda", &l3AssociatedSimMuonLambda);
	tree->SetBranchAddress("l3AssociatedSimMuonQoverP", &l3AssociatedSimMuonQoverP);
	tree->SetBranchAddress("l3TrackIsAssociated", &l3TrackIsAssociated);
	tree->SetBranchAddress("l3TrackParentID", &l3TrackParentID);
	tree->SetBranchAddress("l3TrackMotherBinNumber", &l3TrackMotherBinNumber);
	tree->SetBranchAddress("l3TrackAssociationVar", &l3TrackAssociationVar);
	tree->SetBranchAddress("l3TrackAssociatedSimMuonPt", &l3TrackAssociatedSimMuonPt);
	tree->SetBranchAddress("l3TrackAssociatedSimMuonEta", &l3TrackAssociatedSimMuonEta);
	tree->SetBranchAddress("l3TrackAssociatedSimMuonPhi", &l3TrackAssociatedSimMuonPhi);
	tree->SetBranchAddress("l3TrackAssociatedSimMuonNHits", &l3TrackAssociatedSimMuonNHits);
	tree->SetBranchAddress("l3TrackAssociatedSimMuonDetIds", &l3TrackAssociatedSimMuonDetIds);
	tree->SetBranchAddress("l3TrackAssociatedSimMuonDsz", &l3TrackAssociatedSimMuonDsz);
	tree->SetBranchAddress("l3TrackAssociatedSimMuonDxy", &l3TrackAssociatedSimMuonDxy);
	tree->SetBranchAddress("l3TrackAssociatedSimMuonLambda", &l3TrackAssociatedSimMuonLambda);
	tree->SetBranchAddress("l3TrackAssociatedSimMuonQoverP", &l3TrackAssociatedSimMuonQoverP);
	tree->SetBranchAddress("l2IsAssociated", &l2IsAssociated);
	tree->SetBranchAddress("l2ParentID", &l2ParentID);
	tree->SetBranchAddress("l2MotherBinNumber", &l2MotherBinNumber);
	tree->SetBranchAddress("l2AssociationVar", &l2AssociationVar);
	tree->SetBranchAddress("l2AssociatedSimMuonPt", &l2AssociatedSimMuonPt);
	tree->SetBranchAddress("l2AssociatedSimMuonEta", &l2AssociatedSimMuonEta);
	tree->SetBranchAddress("l2AssociatedSimMuonPhi", &l2AssociatedSimMuonPhi);
	tree->SetBranchAddress("l2AssociatedSimMuonNHits", &l2AssociatedSimMuonNHits);
	tree->SetBranchAddress("l2AssociatedSimMuonDetIds", &l2AssociatedSimMuonDetIds);
	tree->SetBranchAddress("l2AssociatedSimMuonNMuHits", &l2AssociatedSimMuonNMuHits);
	tree->SetBranchAddress("l2AssociatedSimMuonMuStationNumber", &l2AssociatedSimMuonMuStationNumber);
	tree->SetBranchAddress("l2AssociatedSimMuonDsz", &l2AssociatedSimMuonDsz);
	tree->SetBranchAddress("l2AssociatedSimMuonDxy", &l2AssociatedSimMuonDxy);
	tree->SetBranchAddress("l2AssociatedSimMuonLambda", &l2AssociatedSimMuonLambda);
	tree->SetBranchAddress("l2AssociatedSimMuonQoverP", &l2AssociatedSimMuonQoverP);
	tree->SetBranchAddress("simMuonParentID", &simMuonParentID);
	tree->SetBranchAddress("simMuonMotherBinNumber", &simMuonMotherBinNumber);
	tree->SetBranchAddress("simMuonPt", &simMuonPt);
	tree->SetBranchAddress("simMuonEta", &simMuonEta);
	tree->SetBranchAddress("simMuonPhi", &simMuonPhi);
	tree->SetBranchAddress("simMuonNHits", &simMuonNHits);
	tree->SetBranchAddress("simMuonDetIds", &simMuonDetIds);
	tree->SetBranchAddress("simMuonNMuHits", &simMuonNMuHits);
	tree->SetBranchAddress("simMuonMuStationNumber", &simMuonMuStationNumber);
	tree->SetBranchAddress("simMuonDsz", &simMuonDsz);
	tree->SetBranchAddress("simMuonDxy", &simMuonDxy);
	tree->SetBranchAddress("simMuonLambda", &simMuonLambda);
	tree->SetBranchAddress("simMuonQoverP", &simMuonQoverP);
	tree->SetBranchAddress("simToL3Associated", &simToL3Associated);
	tree->SetBranchAddress("simToL3AssociationVar", &simToL3AssociationVar);
	tree->SetBranchAddress("simToL3RecoIndex", &simToL3RecoIndex);
	tree->SetBranchAddress("simToTkAssociated", &simToTkAssociated);
	tree->SetBranchAddress("simToTkAssociationVar", &simToTkAssociationVar);
	tree->SetBranchAddress("simToTkRecoIndex", &simToTkRecoIndex);
	tree->SetBranchAddress("simToL2Associated", &simToL2Associated);
	tree->SetBranchAddress("simToL2AssociationVar", &simToL2AssociationVar);
	tree->SetBranchAddress("simToL2RecoIndex", &simToL2RecoIndex);
}
