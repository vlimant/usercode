/********************************************************************
* MyLibDict.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error MyLibDict.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "cint/G__ci.h"
extern "C" {
extern void G__cpp_setup_tagtableMyLibDict();
extern void G__cpp_setup_inheritanceMyLibDict();
extern void G__cpp_setup_typetableMyLibDict();
extern void G__cpp_setup_memvarMyLibDict();
extern void G__cpp_setup_globalMyLibDict();
extern void G__cpp_setup_memfuncMyLibDict();
extern void G__cpp_setup_funcMyLibDict();
extern void G__set_cpp_environmentMyLibDict();
}


#include "TObject.h"
#include "TMemberInspector.h"
#include "map.h"
#include "vector.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__MyLibDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR;
extern G__linked_taginfo G__MyLibDictLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator;
extern G__linked_taginfo G__MyLibDictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyLibDictLN_string;
extern G__linked_taginfo G__MyLibDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR;
extern G__linked_taginfo G__MyLibDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyLibDictLN_lesslEstringgR;
extern G__linked_taginfo G__MyLibDictLN_allocatorlEpairlEconstsPstringcOdoublegRsPgR;
extern G__linked_taginfo G__MyLibDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR;
extern G__linked_taginfo G__MyLibDictLN_pairlEstringcOdoublegR;
extern G__linked_taginfo G__MyLibDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgRcLcLiterator;
extern G__linked_taginfo G__MyLibDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgRcLcLreverse_iterator;
extern G__linked_taginfo G__MyLibDictLN_lesslEintgR;
extern G__linked_taginfo G__MyLibDictLN_vectorlEintcOallocatorlEintgRsPgR;
extern G__linked_taginfo G__MyLibDictLN_vectorlEintcOallocatorlEintgRsPgRcLcLiterator;
extern G__linked_taginfo G__MyLibDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__MyLibDictLN_pairlEintcOvectorlEintcOallocatorlEintgRsPgRsPgR;
extern G__linked_taginfo G__MyLibDictLN_pairlEintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR;
extern G__linked_taginfo G__MyLibDictLN_allocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgR;
extern G__linked_taginfo G__MyLibDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR;
extern G__linked_taginfo G__MyLibDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator;
extern G__linked_taginfo G__MyLibDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLreverse_iterator;
extern G__linked_taginfo G__MyLibDictLN_pairlEmaplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR;
extern G__linked_taginfo G__MyLibDictLN_allocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR;
extern G__linked_taginfo G__MyLibDictLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR;
extern G__linked_taginfo G__MyLibDictLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator;
extern G__linked_taginfo G__MyLibDictLN_maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator;
extern G__linked_taginfo G__MyLibDictLN_pairlEmaplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR;

/* STUB derived class for protected member access */
typedef vector<double,allocator<double> > G__vectorlEdoublecOallocatorlEdoublegRsPgR;
typedef map<string,double,less<string>,allocator<pair<const string,double> > > G__maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR;
typedef vector<int,allocator<int> > G__vectorlEintcOallocatorlEintgRsPgR;
typedef pair<int,vector<int,allocator<int> > > G__pairlEintcOvectorlEintcOallocatorlEintgRsPgRsPgR;
typedef pair<int,vector<double,allocator<double> > > G__pairlEintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR;
typedef map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > > G__maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR;
typedef map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >::iterator G__maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRcLcLiterator;
typedef map<int,vector<double,allocator<double> >,less<int>,allocator<pair<const int,vector<double,allocator<double> > > > > G__maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR;
typedef map<int,vector<double,allocator<double> >,less<int>,allocator<pair<const int,vector<double,allocator<double> > > > >::iterator G__maplEintcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator;
